
k10s_dir="$HOME/.config/k10s"
groups_file="$k10s_dir/groups"

process_contexts() {
  local index=0
  local random=$RANDOM
  local session="session-$random"
  local split_times=$(($#-1))
  tmux new-session -d -s "$session" \; switch-client -t "$session"

  while [[ "$split_times" -gt 0 ]] ; do
    tmux split-window -h -t "$session"
    ((split_times--))
  done
    tmux send-keys -t "$session:0.0" "tmux select-layout even-horizontal" C-m
  for context in $@; do
    tmux send-keys -t "$session:0.$index" "k9s --context $context" C-m
    ((index++))
  done
}

save_group() {
  mkdir -p "$k10s_dir"
  touch -- "$groups_file"
  local group=$(echo $@ | awk -F [=,' '] '{print $1}')
  local contexts=$(echo $@ | awk -F [=,' '] '{for (i=2; i<=NF; i++) printf $i (i<NF ? OFS : ORS)}')
  update_group "$group"
  echo "$group"="$contexts" >> "$groups_file"
}

update_group() {
  while read line; do
    local group=$(echo "$line" | awk -F [=,' '] '{print $1}')
    if [[ "$1" = "$group" ]]; then
      if [[ "$OSTYPE" = "darwin"* ]]; then
        sed -i '' "/^$line/d" "$groups_file"
      else
        sed -i'' "/^$line/d" -- "$groups_file"
      fi
    fi
  done < "$groups_file"
}

start_group() {
  while read line; do
    local group=$(echo "$line" | awk -F = '{print $1}')
    if [[ "$group" = "$1" ]]; then
      local contexts=$(echo "$line" | awk -F = '{for (i=2; i<=NF; i++) printf $i (i<NF ? OFS : ORS)}')
      process_contexts ${contexts[@]}
    fi
  done < "$groups_file"
}

usage() {
    figlet -f slant "k10s"
    cat <<EOT
k10s is a CLI that enables starting multiple k9s instances at once.

Usage: k10s [flags]

Flags:
    -c, --context   List of contexts to start up (e.g. k10s -c <CONTEXT_NAME> <CONTEXT_NAME> ...)
    -s, --save      List of contexts to save/overwrite as a group name (e.g. k10s -s <GROUP_NAME>=<CONTEXT_NAME> <CONTEXT_NAME> ...)
    -g, --group     Group name of contexts to start up (e.g. k10s -g <GROUP_NAME>)
    -h, --help      Help for k10s

EOT
    exit 0
}

main() {
  if [[ "$#" -eq 0 ]]; then
      usage
  fi

  while [[ "$#" -gt 0 ]]; do
    case "$1" in 
    -c | --context ) 
      shift
      contexts=()
      while [[ "$1" != "" && "$1" != -* ]]; do
          contexts+=("$1")
          shift
      done
      process_contexts ${contexts[@]}
      ;;
    -s | --save ) 
      shift
      contexts=()
      while [[ "$1" != "" && "$1" != -* ]]; do
          contexts+=("$1")
          shift
      done
      save_group ${contexts[@]}
      ;;
    -g | --group )
      shift
      start_group "$1"
      ;;
    -h | --help )
      shift
      usage
      ;;
    * )
      shift
      usage
      ;;
    esac
    shift
  done
}

main $@
